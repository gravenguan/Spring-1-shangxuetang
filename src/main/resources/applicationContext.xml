<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--通过setter方法注入，最常用-->
    <bean id="helloWorld" class="com.heran.spring1.demo.HelloWorld">
        <property name="name" value="Spring"></property>
    </bean>

    <!--构造方法注入，没有name属性,可以指定参数位置index和类型type，以区分重载的构造器-->
    <bean id="car" class="com.heran.spring1.demo.Car">
        <constructor-arg value="Audi" index="0"></constructor-arg>
        <constructor-arg value="Shanghai" index="1"></constructor-arg>
        <constructor-arg value="300000.1" type ="double"></constructor-arg>
    </bean>

    <bean id="car2" class="com.heran.spring1.demo.Car">
        <constructor-arg value="BMW" type="java.lang.String"></constructor-arg>
        <!--如果包含特殊字符，用<![CDATA[]>包裹起来-->
        <constructor-arg type="java.lang.String">
            <value><![CDATA[<Shanghai^>]]></value>
        </constructor-arg>
        <constructor-arg type="int">
            <value>250</value>
        </constructor-arg>
    </bean>


    <bean id="person" class="com.heran.spring1.demo.Person">
        <property name="name" value="Tom"></property>
        <property name="age" value="24"></property>
        <!--<property name="car">-->
            <!--<ref bean="car2"></ref>-->
        <!--</property>-->
        <!--Internal Bean-->
        <property name="car">
            <bean id="car3" class="com.heran.spring1.demo.Car">
                <constructor-arg value="Ford"></constructor-arg>
                <constructor-arg value="Changan"></constructor-arg>
                <constructor-arg value ="200000" type="double"></constructor-arg>
            </bean>
        </property>
    </bean>

    <bean id="person2" class="com.heran.spring1.demo.Person">
        <constructor-arg value="Jerry"></constructor-arg>
        <constructor-arg value="25"></constructor-arg>
        <!--<constructor-arg ref="car"></constructor-arg>-->
        <!--测试赋值null-->
        <!--<constructor-arg><null/></constructor-arg>-->
        <constructor-arg ref="car"></constructor-arg>
        <!--为级联属性赋值 注意：属性需要先初始化后才能为级联属性赋值，否则会有异常-->
        <property name="car.maxSpeed" value="150"></property>
    </bean>

    <!--测试配置集合属性-->
    <bean id="person3" class="com.heran.spring1.demo.collect.Person">
        <property name="name" value="Mike"></property>
        <property name="age" value="27"></property>
        <property name="cars">
            <list>
                <ref bean="car"/>
                <ref bean="car2"/>
                <bean class="com.heran.spring1.demo.Car">
                    <constructor-arg value="Ford"></constructor-arg>
                    <constructor-arg value="Changan"></constructor-arg>
                    <constructor-arg value ="200000" type="double"></constructor-arg>
                </bean>
            </list>
        </property>
    </bean>

    <!--配置map属性值-->
    <bean id="newPerson" class="com.heran.spring1.demo.collect.NewPerson">
        <property name="name" value="Rose"></property>
        <property name="age" value="28"></property>
        <property name="cars">
            <map>
                <entry key="AA" value-ref="car"></entry>
                <entry key="BB" value-ref="car2"></entry>
            </map>
        </property>
    </bean>

    <!--配置Properties属性值-->
    <bean id="dataSource" class="com.heran.spring1.demo.collect.DataSource">
        <property name="properties">
            <props>
                <prop key="user">root</prop>
                <prop key="password">1234</prop>
                <prop key="jdbcUrl">jdbc:mysql:///test</prop>
                <prop key="driverClass">com.mysql.jdbc.Driver</prop>
            </props>
        </property>
    </bean>


    <!--配置单例的集合bean，以供多个bean进行引用,需要导入util namespace-->
    <util:list id="cars">
        <ref bean="car"/>
        <ref bean="car2"/>
    </util:list>

    <bean id="person4" class="com.heran.spring1.demo.collect.Person">
        <property name="name" value="Jack"></property>
        <property name="age" value="29"></property>
        <property name="cars" ref="cars"></property>

    </bean>

    <!--通过p空间为bean属性赋值,需要先导入p命名空间,相对于传统配置方式更加简洁-->
    <bean id="person5" class="com.heran.spring1.demo.collect.Person" p:age="30" p:name="Queen" p:cars-ref="cars">
    </bean>


</beans>